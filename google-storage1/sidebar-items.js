initSidebarItems({"struct":[["Bucket","A bucket."],["BucketAccessControl","An access-control entry."],["BucketAccessControlDeleteCallBuilder","Permanently deletes the ACL entry for the specified entity on the specified bucket."],["BucketAccessControlGetCallBuilder","Returns the ACL entry for the specified entity on the specified bucket."],["BucketAccessControlInsertCallBuilder","Creates a new ACL entry on the specified bucket."],["BucketAccessControlListCallBuilder","Retrieves ACL entries on the specified bucket."],["BucketAccessControlMethodsBuilder","A builder providing access to all methods supported on *bucketAccessControl* resources. It is not used directly, but through the `Storage` hub."],["BucketAccessControlPatchCallBuilder","Updates an ACL entry on the specified bucket. This method supports patch semantics."],["BucketAccessControlProjectTeam","The project team associated with the entity, if any."],["BucketAccessControlUpdateCallBuilder","Updates an ACL entry on the specified bucket."],["BucketAccessControls","An access-control list."],["BucketCors","The bucket's Cross-Origin Resource Sharing (CORS) configuration."],["BucketDeleteCallBuilder","Permanently deletes an empty bucket."],["BucketGetCallBuilder","Returns metadata for the specified bucket."],["BucketInsertCallBuilder","Creates a new bucket."],["BucketLifecycle","The bucket's lifecycle configuration. See lifecycle management for more information."],["BucketLifecycleRule","A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken."],["BucketLifecycleRuleAction","The action to take."],["BucketLifecycleRuleCondition","The condition(s) under which the action will be taken."],["BucketListCallBuilder","Retrieves a list of buckets for a given project."],["BucketLogging","The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs."],["BucketMethodsBuilder","A builder providing access to all methods supported on *bucket* resources. It is not used directly, but through the `Storage` hub."],["BucketOwner","The owner of the bucket. This is always the project team's owner group."],["BucketPatchCallBuilder","Updates a bucket. This method supports patch semantics."],["BucketUpdateCallBuilder","Updates a bucket."],["BucketVersioning","The bucket's versioning configuration."],["BucketWebsite","The bucket's website configuration."],["Buckets","A list of buckets."],["Channel","An notification channel used to watch for resource changes."],["ChannelMethodsBuilder","A builder providing access to all methods supported on *channel* resources. It is not used directly, but through the `Storage` hub."],["ChannelStopCallBuilder","Stop watching resources through this channel"],["ComposeRequest","A Compose request."],["ComposeRequestSourceObjects","The list of source objects that will be concatenated into a single object."],["ComposeRequestSourceObjectsObjectPreconditions","Conditions that must be met for this operation to execute."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DefaultObjectAccessControlDeleteCallBuilder","Permanently deletes the default object ACL entry for the specified entity on the specified bucket."],["DefaultObjectAccessControlGetCallBuilder","Returns the default object ACL entry for the specified entity on the specified bucket."],["DefaultObjectAccessControlInsertCallBuilder","Creates a new default object ACL entry on the specified bucket."],["DefaultObjectAccessControlListCallBuilder","Retrieves default object ACL entries on the specified bucket."],["DefaultObjectAccessControlMethodsBuilder","A builder providing access to all methods supported on *defaultObjectAccessControl* resources. It is not used directly, but through the `Storage` hub."],["DefaultObjectAccessControlPatchCallBuilder","Updates a default object ACL entry on the specified bucket. This method supports patch semantics."],["DefaultObjectAccessControlUpdateCallBuilder","Updates a default object ACL entry on the specified bucket."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Object","An object."],["ObjectAccessControl","An access-control entry."],["ObjectAccessControlDeleteCallBuilder","Permanently deletes the ACL entry for the specified entity on the specified object."],["ObjectAccessControlGetCallBuilder","Returns the ACL entry for the specified entity on the specified object."],["ObjectAccessControlInsertCallBuilder","Creates a new ACL entry on the specified object."],["ObjectAccessControlListCallBuilder","Retrieves ACL entries on the specified object."],["ObjectAccessControlMethodsBuilder","A builder providing access to all methods supported on *objectAccessControl* resources. It is not used directly, but through the `Storage` hub."],["ObjectAccessControlPatchCallBuilder","Updates an ACL entry on the specified object. This method supports patch semantics."],["ObjectAccessControlProjectTeam","The project team associated with the entity, if any."],["ObjectAccessControlUpdateCallBuilder","Updates an ACL entry on the specified object."],["ObjectAccessControls","An access-control list."],["ObjectComposeCallBuilder","Concatenates a list of existing objects into a new object in the same bucket."],["ObjectCopyCallBuilder","Copies an object to a specified location. Optionally overrides metadata."],["ObjectDeleteCallBuilder","Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used."],["ObjectGetCallBuilder","Retrieves an object or its metadata."],["ObjectInsertCallBuilder","Stores a new object and metadata."],["ObjectListCallBuilder","Retrieves a list of objects matching the criteria."],["ObjectMethodsBuilder","A builder providing access to all methods supported on *object* resources. It is not used directly, but through the `Storage` hub."],["ObjectOwner","The owner of the object. This will always be the uploader of the object."],["ObjectPatchCallBuilder","Updates an object's metadata. This method supports patch semantics."],["ObjectUpdateCallBuilder","Updates an object's metadata."],["ObjectWatchAllCallBuilder","Watch for changes on all objects in a bucket."],["Objects","A list of objects."],["Storage","Central instance to access all Storage related resource activities"]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["ResponseResult","Identifies types which are used in API responses."],["UnusedType","Identifies types which are not actually used by the API This might be a bug within the google API schema."]],"enum":[["Result","A universal result type used as return for all action method results."],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]]});